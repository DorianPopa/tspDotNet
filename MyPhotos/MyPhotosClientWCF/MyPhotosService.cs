//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyPhotosClientWCF
{
    using System.Runtime.Serialization;
    using System.ServiceModel;


    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "File", Namespace = "http://schemas.datacontract.org/2004/07/MyPhotos")]
    public partial class File : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private System.DateTime CreatedAtField;

        private bool DeletedField;

        private MyPhotosClientWCF.FileProperty[] FilePropertiesField;

        private System.Guid IdField;

        private string NameField;

        private string PathField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedAt
        {
            get
            {
                return this.CreatedAtField;
            }
            set
            {
                this.CreatedAtField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deleted
        {
            get
            {
                return this.DeletedField;
            }
            set
            {
                this.DeletedField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotosClientWCF.FileProperty[] FileProperties
        {
            get
            {
                return this.FilePropertiesField;
            }
            set
            {
                this.FilePropertiesField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path
        {
            get
            {
                return this.PathField;
            }
            set
            {
                this.PathField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "FileProperty", Namespace = "http://schemas.datacontract.org/2004/07/MyPhotos")]
    public partial class FileProperty : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private MyPhotosClientWCF.File FileField;

        private System.Guid FileIdField;

        private System.Guid IdField;

        private MyPhotosClientWCF.Property PropertyField;

        private System.Guid PropertyIdField;

        private string ValueField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotosClientWCF.File File
        {
            get
            {
                return this.FileField;
            }
            set
            {
                this.FileField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid FileId
        {
            get
            {
                return this.FileIdField;
            }
            set
            {
                this.FileIdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotosClientWCF.Property Property
        {
            get
            {
                return this.PropertyField;
            }
            set
            {
                this.PropertyField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PropertyId
        {
            get
            {
                return this.PropertyIdField;
            }
            set
            {
                this.PropertyIdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                this.ValueField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "Property", Namespace = "http://schemas.datacontract.org/2004/07/MyPhotosClientWCF")]
    public partial class Property : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private string DescriptionField;

        private MyPhotosClientWCF.FileProperty[] FilePropertiesField;

        private System.Guid IdField;

        private bool IsBaseField;

        private string TitleField;

        private string TypeField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotosClientWCF.FileProperty[] FileProperties
        {
            get
            {
                return this.FilePropertiesField;
            }
            set
            {
                this.FilePropertiesField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBase
        {
            get
            {
                return this.IsBaseField;
            }
            set
            {
                this.IsBaseField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title
        {
            get
            {
                return this.TitleField;
            }
            set
            {
                this.TitleField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                this.TypeField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName = "IMyPhotos")]
public interface IMyPhotos
{

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFile/CreateNewFile", ReplyAction = "http://tempuri.org/InterfaceFile/CreateNewFileResponse")]
    MyPhotosClientWCF.File CreateNewFile(string path, string name);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFile/CreateNewFile", ReplyAction = "http://tempuri.org/InterfaceFile/CreateNewFileResponse")]
    System.Threading.Tasks.Task<MyPhotosClientWCF.File> CreateNewFileAsync(string path, string name);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFile/AddFile", ReplyAction = "http://tempuri.org/InterfaceFile/AddFileResponse")]
    MyPhotosClientWCF.File AddFile(MyPhotosClientWCF.File toBeAdded);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFile/AddFile", ReplyAction = "http://tempuri.org/InterfaceFile/AddFileResponse")]
    System.Threading.Tasks.Task<MyPhotosClientWCF.File> AddFileAsync(MyPhotosClientWCF.File toBeAdded);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFile/GetFileById", ReplyAction = "http://tempuri.org/InterfaceFile/GetFileByIdResponse")]
    MyPhotosClientWCF.File GetFileById(System.Guid id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFile/GetFileById", ReplyAction = "http://tempuri.org/InterfaceFile/GetFileByIdResponse")]
    System.Threading.Tasks.Task<MyPhotosClientWCF.File> GetFileByIdAsync(System.Guid id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFile/GetAllFiles", ReplyAction = "http://tempuri.org/InterfaceFile/GetAllFilesResponse")]
    MyPhotosClientWCF.File[] GetAllFiles();

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFile/GetAllFiles", ReplyAction = "http://tempuri.org/InterfaceFile/GetAllFilesResponse")]
    System.Threading.Tasks.Task<MyPhotosClientWCF.File[]> GetAllFilesAsync();

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFile/GetAllNonDeletedFiles", ReplyAction = "http://tempuri.org/InterfaceFile/GetAllNonDeletedFilesResponse")]
    MyPhotosClientWCF.File[] GetAllNonDeletedFiles();

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFile/GetAllNonDeletedFiles", ReplyAction = "http://tempuri.org/InterfaceFile/GetAllNonDeletedFilesResponse")]
    System.Threading.Tasks.Task<MyPhotosClientWCF.File[]> GetAllNonDeletedFilesAsync();

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFile/EffectiveDeleteFile", ReplyAction = "http://tempuri.org/InterfaceFile/EffectiveDeleteFileResponse")]
    void EffectiveDeleteFile(System.Guid id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFile/EffectiveDeleteFile", ReplyAction = "http://tempuri.org/InterfaceFile/EffectiveDeleteFileResponse")]
    System.Threading.Tasks.Task EffectiveDeleteFileAsync(System.Guid id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFile/DeleteFile", ReplyAction = "http://tempuri.org/InterfaceFile/DeleteFileResponse")]
    bool DeleteFile(System.Guid id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFile/DeleteFile", ReplyAction = "http://tempuri.org/InterfaceFile/DeleteFileResponse")]
    System.Threading.Tasks.Task<bool> DeleteFileAsync(System.Guid id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceProperty/CreateProperty", ReplyAction = "http://tempuri.org/InterfaceProperty/CreatePropertyResponse")]
    MyPhotosClientWCF.Property CreateProperty(string title, string description, string type);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceProperty/CreateProperty", ReplyAction = "http://tempuri.org/InterfaceProperty/CreatePropertyResponse")]
    System.Threading.Tasks.Task<MyPhotosClientWCF.Property> CreatePropertyAsync(string title, string description, string type);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceProperty/InitializeDefaultProperties", ReplyAction = "http://tempuri.org/InterfaceProperty/InitializeDefaultPropertiesResponse")]
    void InitializeDefaultProperties();

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceProperty/InitializeDefaultProperties", ReplyAction = "http://tempuri.org/InterfaceProperty/InitializeDefaultPropertiesResponse")]
    System.Threading.Tasks.Task InitializeDefaultPropertiesAsync();

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceProperty/AddProperty", ReplyAction = "http://tempuri.org/InterfaceProperty/AddPropertyResponse")]
    MyPhotosClientWCF.Property AddProperty(MyPhotosClientWCF.Property toBeAdded);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceProperty/AddProperty", ReplyAction = "http://tempuri.org/InterfaceProperty/AddPropertyResponse")]
    System.Threading.Tasks.Task<MyPhotosClientWCF.Property> AddPropertyAsync(MyPhotosClientWCF.Property toBeAdded);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceProperty/GetPropertyByTitle", ReplyAction = "http://tempuri.org/InterfaceProperty/GetPropertyByTitleResponse")]
    MyPhotosClientWCF.Property GetPropertyByTitle(string title);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceProperty/GetPropertyByTitle", ReplyAction = "http://tempuri.org/InterfaceProperty/GetPropertyByTitleResponse")]
    System.Threading.Tasks.Task<MyPhotosClientWCF.Property> GetPropertyByTitleAsync(string title);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceProperty/GetPropertyById", ReplyAction = "http://tempuri.org/InterfaceProperty/GetPropertyByIdResponse")]
    MyPhotosClientWCF.Property GetPropertyById(System.Guid id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceProperty/GetPropertyById", ReplyAction = "http://tempuri.org/InterfaceProperty/GetPropertyByIdResponse")]
    System.Threading.Tasks.Task<MyPhotosClientWCF.Property> GetPropertyByIdAsync(System.Guid id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceProperty/GetAllProperties", ReplyAction = "http://tempuri.org/InterfaceProperty/GetAllPropertiesResponse")]
    MyPhotosClientWCF.Property[] GetAllProperties();

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceProperty/GetAllProperties", ReplyAction = "http://tempuri.org/InterfaceProperty/GetAllPropertiesResponse")]
    System.Threading.Tasks.Task<MyPhotosClientWCF.Property[]> GetAllPropertiesAsync();

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceProperty/EditProperty", ReplyAction = "http://tempuri.org/InterfaceProperty/EditPropertyResponse")]
    MyPhotosClientWCF.Property EditProperty(System.Guid id, string title, string description);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceProperty/EditProperty", ReplyAction = "http://tempuri.org/InterfaceProperty/EditPropertyResponse")]
    System.Threading.Tasks.Task<MyPhotosClientWCF.Property> EditPropertyAsync(System.Guid id, string title, string description);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceProperty/DeleteProperty", ReplyAction = "http://tempuri.org/InterfaceProperty/DeletePropertyResponse")]
    void DeleteProperty(System.Guid id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceProperty/DeleteProperty", ReplyAction = "http://tempuri.org/InterfaceProperty/DeletePropertyResponse")]
    System.Threading.Tasks.Task DeletePropertyAsync(System.Guid id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceProperty/ValidateDataType", ReplyAction = "http://tempuri.org/InterfaceProperty/ValidateDataTypeResponse")]
    bool ValidateDataType(string dataType, string value);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceProperty/ValidateDataType", ReplyAction = "http://tempuri.org/InterfaceProperty/ValidateDataTypeResponse")]
    System.Threading.Tasks.Task<bool> ValidateDataTypeAsync(string dataType, string value);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFileProperty/CreateFileProperty", ReplyAction = "http://tempuri.org/InterfaceFileProperty/CreateFilePropertyResponse")]
    MyPhotosClientWCF.FileProperty CreateFileProperty(System.Guid fileID, System.Guid propertyId, string value);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFileProperty/CreateFileProperty", ReplyAction = "http://tempuri.org/InterfaceFileProperty/CreateFilePropertyResponse")]
    System.Threading.Tasks.Task<MyPhotosClientWCF.FileProperty> CreateFilePropertyAsync(System.Guid fileID, System.Guid propertyId, string value);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFileProperty/AddFilePropertyToFile", ReplyAction = "http://tempuri.org/InterfaceFileProperty/AddFilePropertyToFileResponse")]
    MyPhotosClientWCF.FileProperty AddFilePropertyToFile(MyPhotosClientWCF.FileProperty fileProperty);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFileProperty/AddFilePropertyToFile", ReplyAction = "http://tempuri.org/InterfaceFileProperty/AddFilePropertyToFileResponse")]
    System.Threading.Tasks.Task<MyPhotosClientWCF.FileProperty> AddFilePropertyToFileAsync(MyPhotosClientWCF.FileProperty fileProperty);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFileProperty/GetPropertiesForFileId", ReplyAction = "http://tempuri.org/InterfaceFileProperty/GetPropertiesForFileIdResponse")]
    MyPhotosClientWCF.Property[] GetPropertiesForFileId(System.Guid id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFileProperty/GetPropertiesForFileId", ReplyAction = "http://tempuri.org/InterfaceFileProperty/GetPropertiesForFileIdResponse")]
    System.Threading.Tasks.Task<MyPhotosClientWCF.Property[]> GetPropertiesForFileIdAsync(System.Guid id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFileProperty/GetValueByFileIdAndPropertyId", ReplyAction = "http://tempuri.org/InterfaceFileProperty/GetValueByFileIdAndPropertyIdResponse")]
    string GetValueByFileIdAndPropertyId(System.Guid fileId, System.Guid propertyId);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFileProperty/GetValueByFileIdAndPropertyId", ReplyAction = "http://tempuri.org/InterfaceFileProperty/GetValueByFileIdAndPropertyIdResponse")]
    System.Threading.Tasks.Task<string> GetValueByFileIdAndPropertyIdAsync(System.Guid fileId, System.Guid propertyId);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFileProperty/RemovePropertyForFile", ReplyAction = "http://tempuri.org/InterfaceFileProperty/RemovePropertyForFileResponse")]
    void RemovePropertyForFile(System.Guid propertyId, System.Guid fileId);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InterfaceFileProperty/RemovePropertyForFile", ReplyAction = "http://tempuri.org/InterfaceFileProperty/RemovePropertyForFileResponse")]
    System.Threading.Tasks.Task RemovePropertyForFileAsync(System.Guid propertyId, System.Guid fileId);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IMyPhotosChannel : IMyPhotos, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class MyPhotosClient : System.ServiceModel.ClientBase<IMyPhotos>, IMyPhotos
{

    public MyPhotosClient()
    {
    }

    public MyPhotosClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
    {
    }

    public MyPhotosClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
    {
    }

    public MyPhotosClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
    {
    }

    public MyPhotosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
    {
    }

    public MyPhotosClientWCF.File CreateNewFile(string path, string name)
    {
        return base.Channel.CreateNewFile(path, name);
    }

    public System.Threading.Tasks.Task<MyPhotosClientWCF.File> CreateNewFileAsync(string path, string name)
    {
        return base.Channel.CreateNewFileAsync(path, name);
    }

    public MyPhotosClientWCF.File AddFile(MyPhotosClientWCF.File toBeAdded)
    {
        return base.Channel.AddFile(toBeAdded);
    }

    public System.Threading.Tasks.Task<MyPhotosClientWCF.File> AddFileAsync(MyPhotosClientWCF.File toBeAdded)
    {
        return base.Channel.AddFileAsync(toBeAdded);
    }

    public MyPhotosClientWCF.File GetFileById(System.Guid id)
    {
        return base.Channel.GetFileById(id);
    }

    public System.Threading.Tasks.Task<MyPhotosClientWCF.File> GetFileByIdAsync(System.Guid id)
    {
        return base.Channel.GetFileByIdAsync(id);
    }

    public MyPhotosClientWCF.File[] GetAllFiles()
    {
        return base.Channel.GetAllFiles();
    }

    public System.Threading.Tasks.Task<MyPhotosClientWCF.File[]> GetAllFilesAsync()
    {
        return base.Channel.GetAllFilesAsync();
    }

    public MyPhotosClientWCF.File[] GetAllNonDeletedFiles()
    {
        return base.Channel.GetAllNonDeletedFiles();
    }

    public System.Threading.Tasks.Task<MyPhotosClientWCF.File[]> GetAllNonDeletedFilesAsync()
    {
        return base.Channel.GetAllNonDeletedFilesAsync();
    }

    public void EffectiveDeleteFile(System.Guid id)
    {
        base.Channel.EffectiveDeleteFile(id);
    }

    public System.Threading.Tasks.Task EffectiveDeleteFileAsync(System.Guid id)
    {
        return base.Channel.EffectiveDeleteFileAsync(id);
    }

    public bool DeleteFile(System.Guid id)
    {
        return base.Channel.DeleteFile(id);
    }

    public System.Threading.Tasks.Task<bool> DeleteFileAsync(System.Guid id)
    {
        return base.Channel.DeleteFileAsync(id);
    }

    public MyPhotosClientWCF.Property CreateProperty(string title, string description, string type)
    {
        return base.Channel.CreateProperty(title, description, type);
    }

    public System.Threading.Tasks.Task<MyPhotosClientWCF.Property> CreatePropertyAsync(string title, string description, string type)
    {
        return base.Channel.CreatePropertyAsync(title, description, type);
    }

    public void InitializeDefaultProperties()
    {
        base.Channel.InitializeDefaultProperties();
    }

    public System.Threading.Tasks.Task InitializeDefaultPropertiesAsync()
    {
        return base.Channel.InitializeDefaultPropertiesAsync();
    }

    public MyPhotosClientWCF.Property AddProperty(MyPhotosClientWCF.Property toBeAdded)
    {
        return base.Channel.AddProperty(toBeAdded);
    }

    public System.Threading.Tasks.Task<MyPhotosClientWCF.Property> AddPropertyAsync(MyPhotosClientWCF.Property toBeAdded)
    {
        return base.Channel.AddPropertyAsync(toBeAdded);
    }

    public MyPhotosClientWCF.Property GetPropertyByTitle(string title)
    {
        return base.Channel.GetPropertyByTitle(title);
    }

    public System.Threading.Tasks.Task<MyPhotosClientWCF.Property> GetPropertyByTitleAsync(string title)
    {
        return base.Channel.GetPropertyByTitleAsync(title);
    }

    public MyPhotosClientWCF.Property GetPropertyById(System.Guid id)
    {
        return base.Channel.GetPropertyById(id);
    }

    public System.Threading.Tasks.Task<MyPhotosClientWCF.Property> GetPropertyByIdAsync(System.Guid id)
    {
        return base.Channel.GetPropertyByIdAsync(id);
    }

    public MyPhotosClientWCF.Property[] GetAllProperties()
    {
        return base.Channel.GetAllProperties();
    }

    public System.Threading.Tasks.Task<MyPhotosClientWCF.Property[]> GetAllPropertiesAsync()
    {
        return base.Channel.GetAllPropertiesAsync();
    }

    public MyPhotosClientWCF.Property EditProperty(System.Guid id, string title, string description)
    {
        return base.Channel.EditProperty(id, title, description);
    }

    public System.Threading.Tasks.Task<MyPhotosClientWCF.Property> EditPropertyAsync(System.Guid id, string title, string description)
    {
        return base.Channel.EditPropertyAsync(id, title, description);
    }

    public void DeleteProperty(System.Guid id)
    {
        base.Channel.DeleteProperty(id);
    }

    public System.Threading.Tasks.Task DeletePropertyAsync(System.Guid id)
    {
        return base.Channel.DeletePropertyAsync(id);
    }

    public bool ValidateDataType(string dataType, string value)
    {
        return base.Channel.ValidateDataType(dataType, value);
    }

    public System.Threading.Tasks.Task<bool> ValidateDataTypeAsync(string dataType, string value)
    {
        return base.Channel.ValidateDataTypeAsync(dataType, value);
    }

    public MyPhotosClientWCF.FileProperty CreateFileProperty(System.Guid fileID, System.Guid propertyId, string value)
    {
        return base.Channel.CreateFileProperty(fileID, propertyId, value);
    }

    public System.Threading.Tasks.Task<MyPhotosClientWCF.FileProperty> CreateFilePropertyAsync(System.Guid fileID, System.Guid propertyId, string value)
    {
        return base.Channel.CreateFilePropertyAsync(fileID, propertyId, value);
    }

    public MyPhotosClientWCF.FileProperty AddFilePropertyToFile(MyPhotosClientWCF.FileProperty fileProperty)
    {
        return base.Channel.AddFilePropertyToFile(fileProperty);
    }

    public System.Threading.Tasks.Task<MyPhotosClientWCF.FileProperty> AddFilePropertyToFileAsync(MyPhotosClientWCF.FileProperty fileProperty)
    {
        return base.Channel.AddFilePropertyToFileAsync(fileProperty);
    }

    public MyPhotosClientWCF.Property[] GetPropertiesForFileId(System.Guid id)
    {
        return base.Channel.GetPropertiesForFileId(id);
    }

    public System.Threading.Tasks.Task<MyPhotosClientWCF.Property[]> GetPropertiesForFileIdAsync(System.Guid id)
    {
        return base.Channel.GetPropertiesForFileIdAsync(id);
    }

    public string GetValueByFileIdAndPropertyId(System.Guid fileId, System.Guid propertyId)
    {
        return base.Channel.GetValueByFileIdAndPropertyId(fileId, propertyId);
    }

    public System.Threading.Tasks.Task<string> GetValueByFileIdAndPropertyIdAsync(System.Guid fileId, System.Guid propertyId)
    {
        return base.Channel.GetValueByFileIdAndPropertyIdAsync(fileId, propertyId);
    }

    public void RemovePropertyForFile(System.Guid propertyId, System.Guid fileId)
    {
        base.Channel.RemovePropertyForFile(propertyId, fileId);
    }

    public System.Threading.Tasks.Task RemovePropertyForFileAsync(System.Guid propertyId, System.Guid fileId)
    {
        return base.Channel.RemovePropertyForFileAsync(propertyId, fileId);
    }
}
